 
/*
  Property name
  Property description
*/
  /* Property example with a value */
  /*
  font propertiy is a way to define a variety of font properties within one declaration.
  */
  /*
  - `font-family` property defines a list of fonts for element and it sets the font face to be used for element's text content. The font-family property should hold several font names as a "fallback" system. Start with the font that you want first, then any fonts that might fill in for the first if it is unavailable.
  For example;
  */
  .font-family {
    font-family: "Times New Roman", Times, serif;
}
  /*
  - `font-size` property defines the font size for the text and sets the font size for the element's text content.
  Take a look at this example;
*/
  .font-size {
    font-size: 14px;
}

  /*
  - `font-weight` property is specifying the font weight of the text and sets the weight or boldness of the font.
  For example;
*/
  h1 {
    font-weight: normal;
}
  p {
    font-weight: bold;
}

  /*
  - `font-style` property defines the font style for the element's text content.
  Example;
*/
  p {
    font-style: italic;
}

  /*
  - `line-height` CSS property sets the height (also called leading) between lines of text in a block-level element such as a paragraph.
  One example;
*/
  .line-height {
    line-height: 1.5;
}

  /*
- `font-variant` CSS property sets the variation of the font family.
As seen in this example;
*/
p {
  font-variant: small-caps;
}

/*
- `font-stretch` CSS property selects a normal, condensed, or expanded face from a font.
An example;
*/
.font-stretch {
  font-family: Arial, Helvetica, sans-serif;
  font-stretch: condensed;
}

/*
- `font-size-adjust` property preserves the readability of text when font fallback occurs and it is specifying that font size should be chosen based on the height of lowercase letters rather than the height of capital letters.
One example;
*/
p {
  font-family: "DejaVu Sans", Arial, sans-serif;
  font-size-adjust: 0.6;
}

/*
- `font-synthesis`  property is used to specify whether the browser is allowed to synthesize bold or oblique font faces when the font family used does not contain bold or oblique faces.
Example;
*/
.font-synthesis {
  font-synthesis: none;
}

/*
- `letter-spacing`  property sets the extra spacing between the letters of an element's text.
For example;
*/
.letter-spacing {
  letter-spacing: 15px;
}

/*
- `word-spacing` CSS property sets the spacing between the words in the text content.
Example;
*/
p {
  word-spacing: 50px;
}

/*
- `text-align` CSS property sets the horizontal alignment of the inline content like text and images in its parent block element such as heading or paragraph.

One example;
*/
*h1 {
  text-align: center;
}

/*
- `text-decoration`  property specifies the decorations to be applied on the text content of an element such as underline, overline, etc.
As in this example;
*/
.text-decoration {
  text-decoration: overline;
}

/*
  - `text-decoration-line` CSS property specifies what kind of line decorations are added to the element. This property can accepts one or more space separated values.
  For example;
*/
  .text-decoration-line {
    text-decoration-line: underline overline;
  }

  /*
  - `text-decoration-style` defines the style of the lines specified by the text-decoration-line property.
  An example;
*/
  table {
  text-decoration: underline;
  text-decoration-style: dotted;
}

  /*
  - `text-decoration-color` property specifies the color of the text-decoration-line (underlines, overlines, linethroughs) set on the element.
  One example;
*/
  p {
  text-decoration: underline;
  text-decoration-color: red;
}

  /*
- `text-indent` CSS property specifies the indent in the first line of text within anâ€‰element.
Example;
*/
p {
  text-indent: 100px;
}

/*
- `text-transform` property transforms the case of an element's text content.
Take a look at this example;
*/
p {
  text-transform: capitalize;
}

/*
- `vertical-align` controls the vertical alignment of boxes generated by an inline-level element (usually text and images) with respect to the text baseline within a block-level box, or of table cells within a row.
For example;
*/
img {
  vertical-align: middle;
}
span {
  vertical-align: super;
}

/*
- `white-space` property specifies how white-space such as spaces, tabs, and newline characters are handled inside the elements.
Example;
*/
p {
    white-space: nowrap;
}



